// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using R3NextGenBackend;

namespace R3NextGenBackend.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190501081308_initialModel")]
    partial class initialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendNextGen.Models.CompletedForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CompletedDate");

                    b.Property<long>("FormId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("CompletedForm");
                });

            modelBuilder.Entity("BackendNextGen.Models.Component", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentName")
                        .HasMaxLength(25);

                    b.Property<long>("FormFieldId");

                    b.HasKey("Id");

                    b.HasIndex("FormFieldId")
                        .IsUnique();

                    b.ToTable("Component");
                });

            modelBuilder.Entity("BackendNextGen.Models.Form", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("BackendNextGen.Models.FormField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Column");

                    b.Property<long>("FormId");

                    b.Property<string>("Headline");

                    b.Property<int>("Height");

                    b.Property<int>("Row");

                    b.Property<bool>("Static");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FormField");
                });

            modelBuilder.Entity("BackendNextGen.Models.FormFieldValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompletedFormId");

                    b.Property<long>("FormFieldId");

                    b.Property<long?>("FormFieldId1");

                    b.Property<string>("Value")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.HasIndex("CompletedFormId");

                    b.HasIndex("FormFieldId");

                    b.HasIndex("FormFieldId1");

                    b.ToTable("FormFieldValue");
                });

            modelBuilder.Entity("BackendNextGen.Models.CompletedForm", b =>
                {
                    b.HasOne("BackendNextGen.Models.Form", "Form")
                        .WithMany("CompletedForms")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendNextGen.Models.Component", b =>
                {
                    b.HasOne("BackendNextGen.Models.FormField", "FormField")
                        .WithOne("Component")
                        .HasForeignKey("BackendNextGen.Models.Component", "FormFieldId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendNextGen.Models.FormField", b =>
                {
                    b.HasOne("BackendNextGen.Models.Form", "Form")
                        .WithMany("FormFields")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendNextGen.Models.FormFieldValue", b =>
                {
                    b.HasOne("BackendNextGen.Models.CompletedForm", "CompletedForm")
                        .WithMany("FormFieldValues")
                        .HasForeignKey("CompletedFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BackendNextGen.Models.FormField", "FormField")
                        .WithMany()
                        .HasForeignKey("FormFieldId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BackendNextGen.Models.FormField")
                        .WithMany("FormFieldValues")
                        .HasForeignKey("FormFieldId1");
                });
#pragma warning restore 612, 618
        }
    }
}
